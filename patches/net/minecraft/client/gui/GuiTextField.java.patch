--- a/net/minecraft/client/gui/GuiTextField.java
+++ b/net/minecraft/client/gui/GuiTextField.java
@@ -2,6 +2,8 @@
 
 import com.google.common.base.Predicate;
 import com.google.common.base.Predicates;
+import org.vivecraft.gameplay.screenhandlers.KeyboardHandler;
+
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.BufferBuilder;
 import net.minecraft.client.renderer.GlStateManager;
@@ -17,9 +19,10 @@
     public int x;
     public int y;
 
+    //Forge make public
     /** The width of this text field. */
-    private final int width;
-    private final int height;
+    public int width;
+    public int height;
 
     /** Has the current text being edited on the textbox. */
     private String text = "";
@@ -511,30 +514,38 @@
      */
     public boolean mouseClicked(int mouseX, int mouseY, int mouseButton)
     {
-        boolean flag = mouseX >= this.x && mouseX < this.x + this.width && mouseY >= this.y && mouseY < this.y + this.height;
-
-        if (this.canLoseFocus)
-        {
-            this.setFocused(flag);
-        }
-
-        if (this.isFocused && flag && mouseButton == 0)
-        {
-            int i = mouseX - this.x;
-
-            if (this.enableBackgroundDrawing)
-            {
-                i -= 4;
-            }
+    	boolean flag = mouseX >= this.x && mouseX < this.x + this.width && mouseY >= this.y && mouseY < this.y + this.height;
 
-            String s = this.fontRenderer.trimStringToWidth(this.text.substring(this.lineScrollOffset), this.getWidth());
-            this.setCursorPosition(this.fontRenderer.trimStringToWidth(s, i).length() + this.lineScrollOffset);
-            return true;
-        }
-        else
-        {
-            return false;
-        }
+    	if (this.canLoseFocus)
+    	{
+    		this.setFocused(flag);
+    	}  else {
+
+    	}
+
+    	// VIVE START - show keyboard
+    	if(flag && this.canLoseFocus == true) 
+    		KeyboardHandler.setOverlayShowing(true);       
+    	// VIVE END - show keyboard
+
+
+    	if (this.isFocused && flag && mouseButton == 0)
+    	{
+    		int i = mouseX - this.x;
+
+    		if (this.enableBackgroundDrawing)
+    		{
+    			i -= 4;
+    		}
+
+    		String s = this.fontRenderer.trimStringToWidth(this.text.substring(this.lineScrollOffset), this.getWidth());
+    		this.setCursorPosition(this.fontRenderer.trimStringToWidth(s, i).length() + this.lineScrollOffset);
+    		return true;
+    	}
+    	else
+    	{
+    		return false;
+    	}
     }
 
     /**
@@ -568,7 +579,10 @@
             if (!s.isEmpty())
             {
                 String s1 = flag ? s.substring(0, j) : s;
-                j1 = this.fontRenderer.drawStringWithShadow(s1, (float)l, (float)i1, i);
+            	j1 = this.fontRenderer.drawStringWithShadow(s1, (float)l, (float)i1, i);
+            }  else {
+            	if(!Minecraft.getMinecraft().vrSettings.seated && !KeyboardHandler.Showing && this.canLoseFocus )
+            		this.fontRenderer.drawStringWithShadow("Click to open keyboard", (float)l, (float)i1, this.disabledColor);
             }
 
             boolean flag2 = this.cursorPosition < this.text.length() || this.text.length() >= this.getMaxStringLength();
@@ -732,6 +746,13 @@
         {
             Minecraft.getMinecraft().currentScreen.setFocused(isFocusedIn);
         }
+
+        if(Minecraft.getMinecraft().currentScreen instanceof GuiSleepMP) return;
+        // VIVE START - show keyboard
+        if(isFocusedIn && this.visible && (this.canLoseFocus == false || Minecraft.getMinecraft().vrSettings.autoOpenKeyboard))
+        	KeyboardHandler.setOverlayShowing(isFocusedIn);
+        // VIVE END - show keyboard
+        
     }
 
     /**
